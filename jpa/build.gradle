plugins {
    id 'org.springframework.boot' version "${SpringbootVersion}"
    id 'io.spring.dependency-management' version "${SpringdependencyManagement}"
    id 'java'

    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'io.gonzo'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
assert System.properties["java.specification.version"] == "1.8" || "1.9" || "10" || "11" || "12" || "13" || "14" || "15"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

//apply from: "gradle/querydsl.gradle"

// database config
apply from: "${project.rootDir.toString()}/gradle/h2.gradle"

if (project.hasProperty("pg")) {
    apply from: "${project.rootDir.toString()}/gradle/pg.gradle"
} else {
    apply from: "${project.rootDir.toString()}/gradle/mysql.gradle"
}

apply from: "${project.rootDir.toString()}/gradle/utils.gradle"

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation "com.github.ulisesbocchio:jasypt-spring-boot-starter:1.17"

    //security add
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //querydsl add
    implementation 'com.querydsl:querydsl-jpa'

    //thymeleaf add
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
}

test {
    useJUnitPlatform()
}


// querydsl

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
